{"version":3,"file":"rx-count-down.js","sourceRoot":"","sources":["../src/rx-count-down.ts"],"names":[],"mappings":"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","sourcesContent":["import * as moment from \"moment\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport \"rxjs/add/observable/interval\";\nimport \"rxjs/add/observable/timer\";\nimport \"rxjs/add/observable/never\";\nimport \"rxjs/add/operator/map\";\nimport \"rxjs/add/operator/finally\";\nimport \"rxjs/add/operator/takeUntil\";\n\nexport class RxCountDown {\n    protected remainingTime: string = \"\";\n    protected timerObservable: Observable<number>;\n    protected onCompleteFn: () => void;\n    protected expired: boolean = false;\n\n    constructor(protected durationMs: number = 0,\n                protected endDate: string = \"\",\n                protected intervalMs: number = 1000,\n                protected format: string = \"mm:ss\") {\n\n        this.tick();\n        if (this.isExpired()) {\n            this.timerObservable = Observable.never();\n            return;\n        }\n\n        this.timerObservable = this.generateTimerObservable();\n        this.timerObservable\n            .finally(() => {\n                this.complete();\n            })\n            .subscribe(() => {\n                this.tick();\n            });\n    }\n\n    protected generateTimerObservable(): Observable<number> {\n        let remainingTimeMs = this.computeRemainingTimeMs(this.endDate, this.durationMs);\n        return Observable.interval(this.intervalMs)\n            .takeUntil(Observable.timer(remainingTimeMs));\n    }\n\n    protected tick(): void {\n        let remainingTimeMs = this.computeRemainingTimeMs(this.endDate, this.durationMs);\n        this.remainingTime = this.computeRemainingTimeString(remainingTimeMs);\n\n        if (remainingTimeMs <= 0) {\n            this.complete();\n        }\n    }\n\n    protected complete(): void {\n        if (this.onCompleteFn) {\n            this.onCompleteFn();\n        }\n        this.setExpired();\n    }\n\n    protected computeRemainingTimeString(remainingTimeMs: number): string {\n        if (remainingTimeMs <= 0) {\n            return \"\";\n        }\n        return moment(remainingTimeMs).format(this.format);\n    }\n\n    protected computeRemainingTimeMs(targetDate: string, durationMs: number): number {\n        if (!targetDate && !durationMs) {\n            return 0;\n        }\n        return moment(targetDate).valueOf() - moment().valueOf() + durationMs;\n    }\n\n    protected setExpired(): void {\n        this.remainingTime = \"\";\n        this.expired = true;\n    }\n\n    onComplete(onCompleteFn: () => void): void {\n        this.onCompleteFn = onCompleteFn;\n    }\n\n    getRemainingTime(): string {\n        return this.remainingTime;\n    }\n\n    isExpired(): boolean {\n        return this.expired;\n    }\n\n    subscribe(next?: (value: string) => void,\n              error?: (error: any) => void,\n              complete?: () => void): Subscription {\n\n        return this.timerObservable\n            .map(() => {\n                return this.getRemainingTime();\n            })\n            .subscribe(next, error, complete);\n    }\n}\n\nexport default RxCountDown;\n"]}